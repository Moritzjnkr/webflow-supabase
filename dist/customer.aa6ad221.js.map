{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDA6Ba;AA7Bb;AACA;AACA;;AAEA,MAAM,kBAAkB;IACtB,eAAe;IACf,MAAM,MAAM,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE,CAAC,iBAAiB,CAAC;IAC/C,6DAA6D;IAC7D,IAAI,EAAE,CAAC,SAAS,CAAC;QACf,EAAE,cAAc;QAChB,IAAI,cAAc,CAAC;QACnB,CAAA,GAAA,YAAM,AAAD;IACP;IACA,6CAA6C;IAC7C,IAAI,cAAc,CAAC;AACrB;AAcO,MAAM,kBAAkB;IAC7B;IAEA,MAAM,SAAS,CAAA,GAAA,cAAQ,AAAD,EAAE,OAAO,GAAG,EAAE;IACpC,MAAM,2BAA2B,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE,CAAC,4BAA4B,CAAC;IAE/E,IAAI,WAA4B;IAEhC,4CAA4C;IAC5C,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,CAAA,GAAA,uBAAQ,AAAD,EAClC,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,QACd,MAAM;QAET,IAAI,SAAS,CAAC,MAAM;YAClB,yBAAyB,OAAO,CAAC;YACjC;QACF;QAEA,WAAW;QAEX,mEAAmE;QACnE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,GACpF,yBAAyB,wBAAwB,CAAC;YAC9C,WAAW;YACX,UAAU;YACV,QAAQ;YACR,YAAY;YACZ,WAAW;YACX,cAAc;YACd,cAAc;QACtB;QAEA,mCAAmC;QACnC,UAAU,cAAc,CAAC,SAAS,UAAU;QAC5C,SAAS,cAAc,CAAC,SAAS,SAAS;QAC1C,OAAO,cAAc,CAAC,SAAS,UAAU;QACzC,WAAW,cAAc,CAAC,SAAS,UAAU;QAC7C,UAAU,cAAc,CAAC,SAAS,OAAO;QACzC,aAAa,cAAc,CAAC,SAAS,KAAK;QAC1C,aAAa,cAAc,CAAC,SAAS,KAAK;IAI5C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C;IACzD,6BAA6B;IAC/B;AAMF;AAEA","sources":["src/modules/customer/customer.ts"],"sourcesContent":["import { WFComponent } from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\nconst renderLogoutBtn = () => {\n  //logout button\n  const btn = new WFComponent(`[xa-type=cta-btn]`);\n  //on click setting up button text and calling logout function\n  btn.on(\"click\", (e) => {\n    e.preventDefault();\n    btn.setTextContent(\"Please wait...\");\n    logout();\n  });\n  //changing create account text to logout text\n  btn.setTextContent(\"Logga ut\");\n};\n\n// Order Interface (Modify types as needed)\ninterface Customer {\n  id: string;\n  First_name: string;\n  Last_name: string;\n  gatuadress: string;\n  postnummer: string;\n  postort: string;\n  email: string;\n  phone: string;\n}\n\nexport const customerDetails = async () => {\n  renderLogoutBtn(); \n  \n  const userId = userAuth.getUser().id;\n  const customerDetailsContainer = new WFComponent(`[xa-type=\"customer-details\"]`);\n\n  let customer: Customer | null = null;\n\n  // Fetch and Render Order Details (Combined)\n  try {\n    const { data, error } = await supabase\n      .from(\"Customer\")\n      .select(\"*\")\n      .eq(\"user_id\", userId)\n      .single();\n\n    if (error || !data) {\n      customerDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n      return;\n    }\n\n    customer = data as Customer; \n    \n    // Update Text Content using a similar approach to the working code\n    const { firstname, lastname, adress, postalcode, postalort, uppgiftemail, uppgiftphone } = \n        customerDetailsContainer.getManyChildAsComponents({\n            firstname: \"[xa-type=firstname]\",\n            lastname: \"[xa-type=lastname]\",\n            adress: \"[xa-type=adress]\",\n            postalcode: \"[xa-type=postalcode]\",\n            postalort: \"[xa-type=postalort]\",\n            uppgiftemail: \"[xa-type=uppgiftemail]\",\n            uppgiftphone: \"[xa-type=uppgiftphone]\",\n    });\n    \n    //Update inner text of the elements\n    firstname.setTextContent(customer.First_name);\n    lastname.setTextContent(customer.Last_name);\n    adress.setTextContent(customer.gatuadress);\n    postalcode.setTextContent(customer.postnummer);\n    postalort.setTextContent(customer.postort);\n    uppgiftemail.setTextContent(customer.email);\n    uppgiftphone.setTextContent(customer.phone);\n\n\n\n  } catch (error) {\n    console.error(\"Error fetching order details or status:\", error);\n    // Handle error appropriately\n  }\n\n      \n\n\n  \n};\n\ncustomerDetails();\n"],"names":[],"version":3,"file":"customer.aa6ad221.js.map","sourceRoot":"../"}