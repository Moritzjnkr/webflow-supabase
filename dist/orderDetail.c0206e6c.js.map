{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCgCa,EAAA,MAAA,CAAA,EAAA,eAAA,IAAA,GAhCb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,WACA,EAAA,EAAA,c,E,E,c,C,GAEA,IAAM,EAAkB,KAEtB,IAAM,EAAM,IAAI,EAAA,WAAW,CAAC,qBAE5B,EAAI,EAAE,CAAC,QAAS,AAAC,IACf,EAAE,cAAc,GAChB,EAAI,cAAc,CAAC,kBACnB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,GACF,GAEA,EAAI,cAAc,CAAC,WACrB,EAiBa,EAAe,UAC1B,IAEA,IAAM,EAAS,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,OAAO,GAAG,EAAE,CAC9B,EAAwB,IAAI,EAAA,WAAW,CAAC,6BAE1C,EAAsB,KAG1B,GAAI,CACF,GAAM,CAAE,KAAA,CAAI,CAAE,MAAA,CAAK,CAAE,CAAG,MAAM,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,EAC3B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAW,GACd,EAAE,CAAC,cAAe,CAAA,GAClB,MAAM,GAET,GAAI,GAAS,CAAC,EAAM,CAClB,EAAsB,OAAO,CAAC,iCAC9B,MACF,CAEA,EAAQ,EAIR,GAAM,CAAE,YAAA,CAAW,CAAE,MAAA,CAAK,CAAE,iBAAA,CAAgB,CAAE,MAAA,CAAK,CAAE,SAAA,CAAQ,CAAE,mBAAA,CAAkB,CAAE,WAAA,CAAU,CAAC,CAC1F,EAAsB,wBAAwB,CAAC,CAC/C,WAAY,qBACZ,YAAa,wBACb,MAAO,kBACP,iBAAkB,6BAClB,MAAO,kBACP,SAAU,sBACV,mBAAoB,8BACxB,GAGA,EAAY,cAAc,CAAC,EAAM,SAAS,CAAC,OAAO,CAAC,IACnD,EAAM,cAAc,CAAC,EAAM,UAAU,EACrC,EAAiB,cAAc,CAAC,EAAM,gBAAgB,EACtD,EAAM,cAAc,CAAC,EAAM,MAAM,CAAC,OAAO,CAAC,IAC1C,EAAS,cAAc,CAAC,EAAM,yBAAyB,EACvD,EAAmB,cAAc,CAAC,EAAM,oBAAoB,CAAC,OAAO,CAAC,IACrE,EAAW,YAAY,CAAC,OAAQ,EAAM,oBAAoB,EAE1D,GAAM,CAAE,KAAM,CAAU,CAAE,MAAO,CAAW,CAAE,CAAG,MAAM,AAAA,CAAA,EAAA,EAAA,OAAO,AAAP,EACtD,IAAI,CAAC,gBACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAY,EAAM,EAAE,EACvB,KAAK,CAAC,aAAc,CAAE,UAAW,CAAA,CAAM,GACvC,MAAM,GAEL,GAAI,EAAa,CACb,QAAQ,KAAK,CAAC,+BAAgC,GAC9C,MACJ,CAaA,IAAM,EAAO,EAAW,IAAI,EAAI,EAC1B,EAAU,EAAW,OAAO,EAAI,EAChC,EAAiB,EAAW,eAAe,CAAG,AAb7B,CAAA,AAAC,IACtB,IAAM,EAAO,IAAI,KAAK,GAChB,EAAM,EAAK,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAC5C,EAAQ,AAAC,CAAA,EAAK,QAAQ,GAAK,CAAA,EAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KACrD,EAAO,EAAK,WAAW,GACvB,EAAQ,EAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAC/C,EAAU,EAAK,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAEzD,MAAO,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,EAAE,EAAK,CAAC,EAAE,EAAM,CAAC,EAAE,EAAQ,CAAC,AACxD,CAAA,EAIqE,EAAW,eAAe,EAAI,gBAIjG,AADoB,IAAI,EAAA,WAAW,CAAC,oBACxB,cAAc,CAAC,CAAC,EAAE,EAAK,CAAC,EAGpC,AADuB,IAAI,EAAA,WAAW,CAAC,uBACxB,cAAc,CAAC,CAAC,EAAE,EAAQ,CAAC,EAI1C,AAD8B,IAAI,EAAA,WAAW,CAAC,8BACxB,cAAc,CAAC,EAEzC,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,0CAA2C,EAE3D,CAMF,EAEA,G,E,C,c,Q,U,Q,a,Q,iD,O,E,E,E,C,E","sources":["<anon>","src/modules/order/orderDetail.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"gxkHk\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"orderDetails\", ()=>orderDetails);\nvar _core = require(\"@xatom/core\");\nvar _auth = require(\"../auth\");\nvar _supbase = require(\"../supbase\");\nvar _supbaseDefault = parcelHelpers.interopDefault(_supbase);\nconst renderLogoutBtn = ()=>{\n    //logout button\n    const btn = new (0, _core.WFComponent)(`[xa-type=cta-btn]`);\n    //on click setting up button text and calling logout function\n    btn.on(\"click\", (e)=>{\n        e.preventDefault();\n        btn.setTextContent(\"Please wait...\");\n        (0, _auth.logout)();\n    });\n    //changing create account text to logout text\n    btn.setTextContent(\"Logga ut\");\n};\nconst orderDetails = async ()=>{\n    renderLogoutBtn();\n    const userId = (0, _auth.userAuth).getUser().id;\n    const orderDetailsContainer = new (0, _core.WFComponent)(`[xa-type=\"order-details\"]`);\n    let order = null;\n    // Fetch and Render Order Details (Combined)\n    try {\n        const { data, error } = await (0, _supbaseDefault.default).from(\"Order\").select(\"*\").eq(\"user_id\", userId).eq(\"is_complete\", false).single();\n        if (error || !data) {\n            orderDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n            return;\n        }\n        order = data;\n        // Update Text Content using a similar approach to the working code\n        const { bestallning, datum, varderingsnummer, summa, angeratt, totalgrampurchased, kvittolink } = orderDetailsContainer.getManyChildAsComponents({\n            kvittolink: \"[xa-type=pdf-link]\",\n            bestallning: \"[xa-type=bestallning]\",\n            datum: \"[xa-type=datum]\",\n            varderingsnummer: \"[xa-type=varderingsnummer]\",\n            summa: \"[xa-type=summa]\",\n            angeratt: \"[xa-type=angerr\\xe4tt]\",\n            totalgrampurchased: \"[xa-type=totalgrampurchased]\"\n        });\n        //Update inner text of the elements\n        bestallning.setTextContent(order.barcodeid.toFixed(0));\n        datum.setTextContent(order.order_date);\n        varderingsnummer.setTextContent(order.valuation_number);\n        summa.setTextContent(order.amount.toFixed(2));\n        angeratt.setTextContent(order.cancellation_right_period);\n        totalgrampurchased.setTextContent(order.total_gram_purchased.toFixed(2));\n        kvittolink.setAttribute(\"href\", order.recipe_download_link);\n        const { data: statusData, error: statusError } = await (0, _supbaseDefault.default).from(\"order_status\").select(\"*\").eq(\"order_id\", order.id) // Filter by the Order's id (primary key)\n        .order(\"created_at\", {\n            ascending: false\n        }) // Get the latest status\n        .single();\n        if (statusError) {\n            console.error(\"Error fetching order status:\", statusError);\n            return;\n        }\n        const formatDateTime = (isoString)=>{\n            const date = new Date(isoString);\n            const day = date.getDate().toString().padStart(2, \"0\");\n            const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // getMonth() is zero-based\n            const year = date.getFullYear();\n            const hours = date.getHours().toString().padStart(2, \"0\");\n            const minutes = date.getMinutes().toString().padStart(2, \"0\");\n            return `${day}.${month}.${year} ${hours}:${minutes}`;\n        };\n        const step = statusData.step || 1;\n        const substep = statusData.substep || 1;\n        const kuvertMottagen = statusData.kuvert_mottagen ? formatDateTime(statusData.kuvert_mottagen) : \"Not available\";\n        // Update elements with the step and substep information\n        const stepElement = new (0, _core.WFComponent)(`[xa-type=\"step\"]`);\n        stepElement.setTextContent(`${step}`);\n        const substepElement = new (0, _core.WFComponent)(`[xa-type=\"substep\"]`);\n        substepElement.setTextContent(`${substep}`);\n        // Update the kuvert_mottagen element with the date\n        const kuvertMottagenElement = new (0, _core.WFComponent)(`[xa-type=\"kuvertmottagen\"]`);\n        kuvertMottagenElement.setTextContent(kuvertMottagen);\n    } catch (error) {\n        console.error(\"Error fetching order details or status:\", error);\n    // Handle error appropriately\n    }\n};\norderDetails();\n\n},{\"@xatom/core\":\"5eqAK\",\"../auth\":\"apxUl\",\"../supbase\":\"54PYi\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequire89a0\")\n\n//# sourceMappingURL=orderDetail.c0206e6c.js.map\n","import { WFComponent } from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\nconst renderLogoutBtn = () => {\n  //logout button\n  const btn = new WFComponent(`[xa-type=cta-btn]`);\n  //on click setting up button text and calling logout function\n  btn.on(\"click\", (e) => {\n    e.preventDefault();\n    btn.setTextContent(\"Please wait...\");\n    logout();\n  });\n  //changing create account text to logout text\n  btn.setTextContent(\"Logga ut\");\n};\n\n// Order Interface (Modify types as needed)\ninterface Order {\n  id: string;\n  user_id: string;\n  order_id: string;\n  is_complete: boolean;\n  order_date: string;\n  valuation_number: string;\n  amount: number;\n  cancellation_right_period: string;\n  total_gram_purchased: number;\n  recipe_download_link: string;\n  barcodeid: number;\n}\n\nexport const orderDetails = async () => {\n  renderLogoutBtn(); \n  \n  const userId = userAuth.getUser().id;\n  const orderDetailsContainer = new WFComponent(`[xa-type=\"order-details\"]`);\n\n  let order: Order | null = null;\n\n  // Fetch and Render Order Details (Combined)\n  try {\n    const { data, error } = await supabase\n      .from(\"Order\")\n      .select(\"*\")\n      .eq(\"user_id\", userId)\n      .eq(\"is_complete\", false) \n      .single();\n\n    if (error || !data) {\n      orderDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n      return;\n    }\n\n    order = data as Order; \n\n    \n    // Update Text Content using a similar approach to the working code\n    const { bestallning, datum, varderingsnummer, summa, angeratt, totalgrampurchased, kvittolink} = \n        orderDetailsContainer.getManyChildAsComponents({\n        kvittolink: \"[xa-type=pdf-link]\",\n        bestallning: \"[xa-type=bestallning]\",\n        datum: \"[xa-type=datum]\",\n        varderingsnummer: \"[xa-type=varderingsnummer]\",\n        summa: \"[xa-type=summa]\",\n        angeratt: \"[xa-type=angerrätt]\",\n        totalgrampurchased: \"[xa-type=totalgrampurchased]\",\n    });\n    \n    //Update inner text of the elements\n    bestallning.setTextContent(order.barcodeid.toFixed(0));\n    datum.setTextContent(order.order_date);\n    varderingsnummer.setTextContent(order.valuation_number);\n    summa.setTextContent(order.amount.toFixed(2));\n    angeratt.setTextContent(order.cancellation_right_period);\n    totalgrampurchased.setTextContent(order.total_gram_purchased.toFixed(2));\n    kvittolink.setAttribute(\"href\", order.recipe_download_link);\n\n    const { data: statusData, error: statusError } = await supabase\n    .from(\"order_status\")\n    .select(\"*\")\n    .eq(\"order_id\", order.id)  // Filter by the Order's id (primary key)\n    .order(\"created_at\", { ascending: false }) // Get the latest status\n    .single();\n\n      if (statusError) {\n          console.error(\"Error fetching order status:\", statusError);\n          return;\n      }\n\n      const formatDateTime = (isoString) => {\n        const date = new Date(isoString);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0'); // getMonth() is zero-based\n        const year = date.getFullYear();\n        const hours = date.getHours().toString().padStart(2, '0');\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n    \n        return `${day}.${month}.${year} ${hours}:${minutes}`;\n    };\n\n      const step = statusData.step || 1;\n      const substep = statusData.substep || 1;\n      const kuvertMottagen = statusData.kuvert_mottagen ? formatDateTime(statusData.kuvert_mottagen) : \"Not available\";\n\n      // Update elements with the step and substep information\n      const stepElement = new WFComponent(`[xa-type=\"step\"]`);\n      stepElement.setTextContent(`${step}`);\n\n      const substepElement = new WFComponent(`[xa-type=\"substep\"]`);\n      substepElement.setTextContent(`${substep}`);\n\n      // Update the kuvert_mottagen element with the date\n      const kuvertMottagenElement = new WFComponent(`[xa-type=\"kuvertmottagen\"]`);\n      kuvertMottagenElement.setTextContent(kuvertMottagen);\n\n  } catch (error) {\n    console.error(\"Error fetching order details or status:\", error);\n    // Handle error appropriately\n  }\n\n      \n\n\n  \n};\n\norderDetails();\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","orderDetails","_core","_auth","_supbase","_supbaseDefault","interopDefault","renderLogoutBtn","btn","WFComponent","on","e","preventDefault","setTextContent","logout","userId","userAuth","getUser","orderDetailsContainer","order","data","error","default","from","select","eq","single","setHTML","bestallning","datum","varderingsnummer","summa","angeratt","totalgrampurchased","kvittolink","getManyChildAsComponents","barcodeid","toFixed","order_date","valuation_number","amount","cancellation_right_period","total_gram_purchased","setAttribute","recipe_download_link","statusData","statusError","ascending","console","step","substep","kuvertMottagen","kuvert_mottagen","formatDateTime","isoString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","stepElement","substepElement","kuvertMottagenElement"],"version":3,"file":"orderDetail.c0206e6c.js.map"}