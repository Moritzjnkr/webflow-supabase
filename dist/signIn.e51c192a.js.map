{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CAIa;AAJb;AACA;;AACA;AAEO,MAAM,SAAS;IACpB,gCAAgC;IAChC,MAAM,OAAO,IAAI,CAAA,GAAA,qBAAe,AAAD,EAE5B,CAAC,mBAAmB,CAAC;IAC1B;;;;;;;;;;;AAWA,GACE,iCAAiC;IACjC,KAAK,YAAY,CAAC,CAAC;QACjB,KAAK,QAAQ;QACb,KAAK,WAAW;QAChB,KAAK,sBAAsB,CAAC;QAE5B,0CAA0C;QAC1C,CAAA,GAAA,uBAAQ,AAAD,EAAE,IAAI,CAAC,aAAa,CAAC;YAC1B,OAAO,KAAK,KAAK;YACjB,SAAS;gBACP,oDAAoD;gBACpD,kBAAkB;gBAClB,iBAAiB,CAAA,GAAA,6BAAqB,AAAD;YACvC;QACF,GAAG,IAAI,CAAC,CAAC;YACP,IAAI,SAAS,KAAK,EAAE;gBAClB,KAAK,oBAAoB,CAAC;oBACxB,OAAO,SAAS,KAAK,CAAC,OAAO,IAAI;gBACnC;gBACA,KAAK,cAAc;gBACnB,KAAK,sBAAsB,CAAC;gBAC5B;YACF;YAEA,sDAAsD;YACtD,KAAK,sBAAsB,CAAC;YAC5B,CAAA,GAAA,cAAQ,AAAD,EAAE,sBAAsB,4CAA4C;QAC7E,GAAG,KAAK,CAAC,CAAC;YACR,KAAK,oBAAoB,CAAC;gBACxB,OAAO,IAAI,OAAO,IAAI;YACxB;YACA,KAAK,cAAc;YACnB,KAAK,sBAAsB,CAAC;QAC9B,GAAG,OAAO,CAAC;YACT,KAAK,UAAU;QACjB;IACF;AACF;;;;;2DC1Da;AAAN,MAAM,wBAAwB,CAAC,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,SAAS,IAAI,CAAC,YAAY,CAAC","sources":["src/modules/auth/signIn.ts","src/config/index.ts"],"sourcesContent":["import { WFFormComponent, navigate } from \"@xatom/core\";\nimport supabase from \"../supbase\";\nimport { SUPABASE_REDIRECT_URL } from \"../../config\";\n\nexport const signIn = () => {\n  // Initialize the form component\n  const form = new WFFormComponent<{\n    email: string;\n  }>(`[xa-type=main-form]`);\n/*\n  // Google login button handling\n  const googleBtn = form.getChildAsComponent(`[xa-type=\"google-btn\"]`);\n  googleBtn.on(\"click\", () => {\n    supabase.auth.signInWithOAuth({\n      provider: \"google\",\n      options: {\n        redirectTo: SUPABASE_REDIRECT_URL,\n      },\n    });\n  });\n*/\n  // Form submission for magic link\n  form.onFormSubmit((data) => {\n    form.showForm();\n    form.disableForm();\n    form.updateSubmitButtonText(\"Sending Magic Link...\");\n\n    // Call Supabase auth to send a magic link\n    supabase.auth.signInWithOtp({\n      email: data.email,\n      options: {\n        // Set to false if you do not want automatic sign-up\n        shouldCreateUser: false,\n        emailRedirectTo: SUPABASE_REDIRECT_URL,\n      },\n    }).then((response) => {\n      if (response.error) {\n        form.updateTextViaAttrVar({\n          error: response.error.message || \"Unable to send magic link, please try again\",\n        });\n        form.showErrorState();\n        form.updateSubmitButtonText(\"Send Magic Link\");\n        return;\n      }\n\n      // Notify user to check their email for the magic link\n      form.updateSubmitButtonText(\"Check your email for the magic link\");\n      navigate(\"/auth/check-email\"); // Redirect to a check email page or similar\n    }).catch((err) => {\n      form.updateTextViaAttrVar({\n        error: err.message || \"Unable to send magic link, please try again\",\n      });\n      form.showErrorState();\n      form.updateSubmitButtonText(\"Send Magic Link\");\n    }).finally(() => {\n      form.enableForm();\n    });\n  });\n};","export const SUPABASE_REDIRECT_URL = `${location.protocol}//${location.host}/auth/verify`;\n"],"names":[],"version":3,"file":"signIn.e51c192a.js.map","sourceRoot":"../"}