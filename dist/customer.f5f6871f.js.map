{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC6Ba,EAAA,MAAA,CAAA,EAAA,kBAAA,IAAA,GA7Bb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,WACA,EAAA,EAAA,c,E,E,c,C,GAEA,IAAM,EAAkB,KAEtB,IAAM,EAAM,IAAI,EAAA,WAAW,CAAC,qBAE5B,EAAI,EAAE,CAAC,QAAS,AAAC,IACf,EAAE,cAAc,GAChB,EAAI,cAAc,CAAC,kBACnB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,GACF,GAEA,EAAI,cAAc,CAAC,WACrB,EAca,EAAkB,UAC7B,IAEA,IAAM,EAAS,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,OAAO,GAAG,EAAE,CAC9B,EAA2B,IAAI,EAAA,WAAW,CAAC,gCAE7C,EAA4B,KAGhC,GAAI,CACF,GAAM,CAAE,KAAA,CAAI,CAAE,MAAA,CAAK,CAAE,CAAG,MAAM,AAAA,CAAA,EAAA,EAAA,OAAO,AAAP,EAC3B,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAW,GACd,MAAM,GAET,GAAI,GAAS,CAAC,EAAM,CAClB,EAAyB,OAAO,CAAC,iCACjC,MACF,CAEA,EAAW,EAGX,GAAM,CAAE,UAAA,CAAS,CAAE,SAAA,CAAQ,CAAE,OAAA,CAAM,CAAE,WAAA,CAAU,CAAE,UAAA,CAAS,CAAE,aAAA,CAAY,CAAE,aAAA,CAAY,CAAE,CACpF,EAAyB,wBAAwB,CAAC,CAC9C,UAAW,sBACX,SAAU,qBACV,OAAQ,mBACR,WAAY,uBACZ,UAAW,sBACX,aAAc,yBACd,aAAc,wBACtB,GAGA,EAAU,cAAc,CAAC,EAAS,UAAU,EAC5C,EAAS,cAAc,CAAC,EAAS,SAAS,EAC1C,EAAO,cAAc,CAAC,EAAS,UAAU,EACzC,EAAW,cAAc,CAAC,EAAS,UAAU,EAC7C,EAAU,cAAc,CAAC,EAAS,OAAO,EACzC,EAAa,cAAc,CAAC,EAAS,KAAK,EAC1C,EAAa,cAAc,CAAC,EAAS,KAAK,CAI5C,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,0CAA2C,EAE3D,CAMF,EAEA,G,E,C,c,Q,U,Q,a,Q,iD,O,E,E,E,C,E","sources":["<anon>","src/modules/customer/customer.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"5wgJw\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"customerDetails\", ()=>customerDetails);\nvar _core = require(\"@xatom/core\");\nvar _auth = require(\"../auth\");\nvar _supbase = require(\"../supbase\");\nvar _supbaseDefault = parcelHelpers.interopDefault(_supbase);\nconst renderLogoutBtn = ()=>{\n    //logout button\n    const btn = new (0, _core.WFComponent)(`[xa-type=cta-btn]`);\n    //on click setting up button text and calling logout function\n    btn.on(\"click\", (e)=>{\n        e.preventDefault();\n        btn.setTextContent(\"Please wait...\");\n        (0, _auth.logout)();\n    });\n    //changing create account text to logout text\n    btn.setTextContent(\"Logga ut\");\n};\nconst customerDetails = async ()=>{\n    renderLogoutBtn();\n    const userId = (0, _auth.userAuth).getUser().id;\n    const customerDetailsContainer = new (0, _core.WFComponent)(`[xa-type=\"customer-details\"]`);\n    let customer = null;\n    // Fetch and Render Order Details (Combined)\n    try {\n        const { data, error } = await (0, _supbaseDefault.default).from(\"Customer\").select(\"*\").eq(\"user_id\", userId).single();\n        if (error || !data) {\n            customerDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n            return;\n        }\n        customer = data;\n        // Update Text Content using a similar approach to the working code\n        const { firstname, lastname, adress, postalcode, postalort, uppgiftemail, uppgiftphone } = customerDetailsContainer.getManyChildAsComponents({\n            firstname: \"[xa-type=firstname]\",\n            lastname: \"[xa-type=lastname]\",\n            adress: \"[xa-type=adress]\",\n            postalcode: \"[xa-type=postalcode]\",\n            postalort: \"[xa-type=postalort]\",\n            uppgiftemail: \"[xa-type=uppgiftemail]\",\n            uppgiftphone: \"[xa-type=uppgiftphone]\"\n        });\n        //Update inner text of the elements\n        firstname.setTextContent(customer.First_name);\n        lastname.setTextContent(customer.Last_name);\n        adress.setTextContent(customer.gatuadress);\n        postalcode.setTextContent(customer.postnummer);\n        postalort.setTextContent(customer.postort);\n        uppgiftemail.setTextContent(customer.email);\n        uppgiftphone.setTextContent(customer.phone);\n    } catch (error) {\n        console.error(\"Error fetching order details or status:\", error);\n    // Handle error appropriately\n    }\n};\ncustomerDetails();\n\n},{\"@xatom/core\":\"5eqAK\",\"../auth\":\"apxUl\",\"../supbase\":\"54PYi\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequire89a0\")\n\n//# sourceMappingURL=customer.f5f6871f.js.map\n","import { WFComponent } from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\nconst renderLogoutBtn = () => {\n  //logout button\n  const btn = new WFComponent(`[xa-type=cta-btn]`);\n  //on click setting up button text and calling logout function\n  btn.on(\"click\", (e) => {\n    e.preventDefault();\n    btn.setTextContent(\"Please wait...\");\n    logout();\n  });\n  //changing create account text to logout text\n  btn.setTextContent(\"Logga ut\");\n};\n\n// Order Interface (Modify types as needed)\ninterface Customer {\n  id: string;\n  First_name: string;\n  Last_name: string;\n  gatuadress: string;\n  postnummer: string;\n  postort: string;\n  email: string;\n  phone: string;\n}\n\nexport const customerDetails = async () => {\n  renderLogoutBtn(); \n  \n  const userId = userAuth.getUser().id;\n  const customerDetailsContainer = new WFComponent(`[xa-type=\"customer-details\"]`);\n\n  let customer: Customer | null = null;\n\n  // Fetch and Render Order Details (Combined)\n  try {\n    const { data, error } = await supabase\n      .from(\"Customer\")\n      .select(\"*\")\n      .eq(\"user_id\", userId)\n      .single();\n\n    if (error || !data) {\n      customerDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n      return;\n    }\n\n    customer = data as Customer; \n    \n    // Update Text Content using a similar approach to the working code\n    const { firstname, lastname, adress, postalcode, postalort, uppgiftemail, uppgiftphone } = \n        customerDetailsContainer.getManyChildAsComponents({\n            firstname: \"[xa-type=firstname]\",\n            lastname: \"[xa-type=lastname]\",\n            adress: \"[xa-type=adress]\",\n            postalcode: \"[xa-type=postalcode]\",\n            postalort: \"[xa-type=postalort]\",\n            uppgiftemail: \"[xa-type=uppgiftemail]\",\n            uppgiftphone: \"[xa-type=uppgiftphone]\",\n    });\n    \n    //Update inner text of the elements\n    firstname.setTextContent(customer.First_name);\n    lastname.setTextContent(customer.Last_name);\n    adress.setTextContent(customer.gatuadress);\n    postalcode.setTextContent(customer.postnummer);\n    postalort.setTextContent(customer.postort);\n    uppgiftemail.setTextContent(customer.email);\n    uppgiftphone.setTextContent(customer.phone);\n\n\n\n  } catch (error) {\n    console.error(\"Error fetching order details or status:\", error);\n    // Handle error appropriately\n  }\n\n      \n\n\n  \n};\n\ncustomerDetails();\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","customerDetails","_core","_auth","_supbase","_supbaseDefault","interopDefault","renderLogoutBtn","btn","WFComponent","on","e","preventDefault","setTextContent","logout","userId","userAuth","getUser","customerDetailsContainer","customer","data","error","default","from","select","eq","single","setHTML","firstname","lastname","adress","postalcode","postalort","uppgiftemail","uppgiftphone","getManyChildAsComponents","First_name","Last_name","gatuadress","postnummer","postort","email","phone","console"],"version":3,"file":"customer.f5f6871f.js.map"}