{"mappings":"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","sources":["src/modules/order/orderDetail.ts"],"sourcesContent":["import { WFComponent, WFDynamicList } from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\ninterface Order {\n    id: string;\n    user_id: string;\n    order_id: string;\n    is_complete: boolean;\n    order_date: string;\n    valuation_number: string;\n    amount: string | number | null;\n    cancellation_right_period: string;\n    total_gram_purchased: string | number | null;\n    recipe_download_link: string;\n    barcodeid: number;\n}\n\nconst renderLogoutBtn = () => {\n    const btn = new WFComponent(`[xa-type=cta-btn]`);\n    btn.on(\"click\", (e) => {\n        e.preventDefault();\n        btn.setTextContent(\"Please wait...\");\n        logout();\n    });\n    btn.setTextContent(\"Logga ut\");\n};\n\nconst renderHistory = async () => {\n    const historyContainer = new WFDynamicList<Order>(\"[xa-type='history-list']\", {\n        rowSelector: \"[xa-type='history-item']\",\n        emptySelector: \"[xa-type='no-previous-order']\"\n    });\n\n    historyContainer.rowRenderer(({ rowData, rowElement }) => {\n        if (!rowData || !rowElement) {\n            console.error(\"Row data or element is missing\", rowData, rowElement);\n            return rowElement; // Return the row element to maintain the structure\n        }\n\n        console.log(\"Rendering row with data\", rowData);\n\n        const vardNrComponent = rowElement.getChildAsComponent(\"[xa-type='history-vard-nr']\");\n        const beloppComponent = rowElement.getChildAsComponent(\"[xa-type='history-belopp']\");\n\n        if (vardNrComponent && beloppComponent) {\n            vardNrComponent.setTextContent(rowData.valuation_number || \"N/A\");\n    \n            // Convert amount to number if it's a string, and then apply toFixed\n            const amount = typeof rowData.amount === \"string\" ? parseFloat(rowData.amount) : rowData.amount;\n            const amountText = amount != null && !isNaN(amount) ? amount.toFixed(2) + ' SEK' : \"0.00 SEK\";\n            beloppComponent.setTextContent(amountText);\n        } else {\n            console.error(\"One or more components not found in row element\", vardNrComponent, beloppComponent);\n        }\n\n        return rowElement;\n    });\n\n    try {\n        const { data: historyData, error } = await supabase\n            .from(\"Order\")\n            .select(\"*\")\n            .eq(\"user_id\", userAuth.getUser().id)\n            .eq(\"is_complete\", true)\n            .order(\"order_date\", { ascending: false });\n\n        if (error) {\n            console.error(\"Error fetching order history:\", error);\n            return;\n        }\n\n        console.log(\"Setting data for history\", historyData);\n        historyContainer.setData(historyData || []);\n    } catch (error) {\n        console.error(\"Failed to fetch or render order history:\", error);\n    }\n};\n\nconst fetchLatestIncompleteOrder = async (userId: string) => {\n    try {\n        const { data: order, error } = await supabase\n            .from(\"Order\")\n            .select(\"*\")\n            .eq(\"user_id\", userId)\n            .eq(\"is_complete\", false)\n            .order(\"order_date\", { ascending: false })\n            .limit(1)\n            .single();\n\n        if (error || !order) {\n            console.error(\"Error fetching latest incomplete order or no such order exists\", error);\n            return null;\n        }\n\n        console.log(\"Fetched latest incomplete order\", order);\n        return order;\n    } catch (error) {\n        console.error(\"Error fetching latest incomplete order:\", error);\n        return null;\n    }\n};\n\nconst fetchOrderStatus = async (orderId: string) => {\n    try {\n        const { data: statusData, error: statusError } = await supabase\n            .from(\"order_status\")\n            .select(\"*\")\n            .eq(\"order_id\", orderId)\n            .order(\"created_at\", { ascending: false })\n            .limit(1)\n            .single();\n\n        if (statusError) {\n            console.error(\"Error fetching order status:\", statusError);\n            return null;\n        }\n\n        console.log(\"Fetched latest order status\", statusData);\n        return statusData;\n    } catch (error) {\n        console.error(\"Error fetching order status:\", error);\n        return null;\n    }\n};\n\nexport const orderDetails = async () => {\n    renderLogoutBtn();\n    renderHistory();  // Call to render history of completed orders\n\n    const userId = userAuth.getUser().id;\n    const orderDetailsContainer = new WFComponent(`[xa-type=\"order-details\"]`);\n\n    const order = await fetchLatestIncompleteOrder(userId);\n    if (!order) {\n        orderDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n        return;\n    }\n\n    const components = orderDetailsContainer.getManyChildAsComponents({\n        kvittolink: \"[xa-type=pdf-link]\",\n        bestallning: \"[xa-type=bestallning]\",\n        datum: \"[xa-type=datum]\",\n        varderingsnummer: \"[xa-type=varderingsnummer]\",\n        summa: \"[xa-type=summa]\",\n        angeratt: \"[xa-type=angerr√§tt]\",\n        totalgrampurchased: \"[xa-type=totalgrampurchased]\",\n    });\n\n    if (components.bestallning && components.datum && components.varderingsnummer && components.summa && components.angeratt && components.totalgrampurchased && components.kvittolink) {\n        components.bestallning.setTextContent(order.barcodeid.toFixed(0));\n        components.datum.setTextContent(order.order_date);\n        components.varderingsnummer.setTextContent(order.valuation_number);\n        components.summa.setTextContent(order.amount || \"0.00\");\n        components.angeratt.setTextContent(order.cancellation_right_period);\n        components.totalgrampurchased.setTextContent(order.total_gram_purchased || \"0.00\");\n        components.kvittolink.setAttribute(\"href\", order.recipe_download_link);\n    } else {\n        console.error(\"One or more components not found in order details container\", components);\n        return;\n    }\n\n    const statusData = await fetchOrderStatus(order.id);\n    if (!statusData) return;\n\n    const formatDateTime = (isoString) => {\n        const date = new Date(isoString);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        const hours = date.getHours().toString().padStart(2, '0');\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n\n        return `${day}.${month}.${year} ${hours}:${minutes}`;\n    };\n\n    const step = statusData.step || 1;\n    const substep = statusData.substep || 1;\n    const kuvertMottagen = statusData.kuvert_mottagen ? formatDateTime(statusData.kuvert_mottagen) : \"Not available\";\n\n    const stepElement = new WFComponent(`[xa-type=\"step\"]`);\n    const substepElement = new WFComponent(`[xa-type=\"substep\"]`);\n    const kuvertMottagenElement = new WFComponent(`[xa-type=\"kuvertmottagen\"]`);\n\n    if (stepElement && substepElement && kuvertMottagenElement) {\n        stepElement.setTextContent(`${step}`);\n        substepElement.setTextContent(`${substep}`);\n        kuvertMottagenElement.setTextContent(kuvertMottagen);\n    } else {\n        console.error(\"One or more step-related components not found\", { stepElement, substepElement, kuvertMottagenElement });\n    }\n};\n\norderDetails();\n"],"names":[],"version":3,"file":"orderDetail.c19c28fe.js.map","sourceRoot":"../"}