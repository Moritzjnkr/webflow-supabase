{"mappings":"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","sources":["src/modules/order/orderDetail.ts"],"sourcesContent":["import { WFComponent } from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\nconst renderLogoutBtn = () => {\n  //logout button\n  const btn = new WFComponent(`[xa-type=cta-btn]`);\n  //on click setting up button text and calling logout function\n  btn.on(\"click\", (e) => {\n    e.preventDefault();\n    btn.setTextContent(\"Please wait...\");\n    logout();\n  });\n  //changing create account text to logout text\n  btn.setTextContent(\"Logga ut\");\n};\n\n// Order Interface (Modify types as needed)\ninterface Order {\n  id: string;\n  user_id: string;\n  order_id: string;\n  is_complete: boolean;\n  order_date: string;\n  valuation_number: string;\n  amount: number;\n  cancellation_right_period: string;\n  total_gram_purchased: number;\n  recipe_download_link: string;\n  barcodeid: number;\n}\n\nexport const orderDetails = async () => {\n  renderLogoutBtn(); \n  \n  const userId = userAuth.getUser().id;\n  const orderDetailsContainer = new WFComponent(`[xa-type=\"order-details\"]`);\n\n  let order: Order | null = null;\n\n  // Fetch and Render Order Details (Combined)\n  try {\n    const { data, error } = await supabase\n      .from(\"Order\")\n      .select(\"*\")\n      .eq(\"user_id\", userId)\n      .eq(\"is_complete\", false) \n      .single();\n\n    if (error || !data) {\n      orderDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n      return;\n    }\n\n    order = data as Order; \n\n    \n    // Update Text Content using a similar approach to the working code\n    const { bestallning, datum, varderingsnummer, summa, angeratt, totalgrampurchased, kvittolink} = \n        orderDetailsContainer.getManyChildAsComponents({\n        kvittolink: \"[xa-type=pdf-link]\",\n        bestallning: \"[xa-type=bestallning]\",\n        datum: \"[xa-type=datum]\",\n        varderingsnummer: \"[xa-type=varderingsnummer]\",\n        summa: \"[xa-type=summa]\",\n        angeratt: \"[xa-type=angerrÃ¤tt]\",\n        totalgrampurchased: \"[xa-type=totalgrampurchased]\",\n    });\n    \n    //Update inner text of the elements\n    bestallning.setTextContent(order.barcodeid.toFixed(0));\n    datum.setTextContent(order.order_date);\n    varderingsnummer.setTextContent(order.valuation_number);\n    summa.setTextContent(order.amount.toFixed(2));\n    angeratt.setTextContent(order.cancellation_right_period);\n    totalgrampurchased.setTextContent(order.total_gram_purchased.toFixed(2));\n    kvittolink.setAttribute(\"href\", order.recipe_download_link);\n\n    const { data: statusData, error: statusError } = await supabase\n    .from(\"order_status\")\n    .select(\"*\")\n    .eq(\"order_id\", order.id)  // Filter by the Order's id (primary key)\n    .order(\"created_at\", { ascending: false }) // Get the latest status\n    .single();\n\n      if (statusError) {\n          console.error(\"Error fetching order status:\", statusError);\n          return;\n      }\n\n      const formatDateTime = (isoString) => {\n        const date = new Date(isoString);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0'); // getMonth() is zero-based\n        const year = date.getFullYear();\n        const hours = date.getHours().toString().padStart(2, '0');\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n    \n        return `${day}.${month}.${year} ${hours}:${minutes}`;\n    };\n\n      const step = statusData.step || 1;\n      const substep = statusData.substep || 1;\n      const kuvertMottagen = statusData.kuvert_mottagen ? formatDateTime(statusData.kuvert_mottagen) : \"Not available\";\n\n      // Update elements with the step and substep information\n      const stepElement = new WFComponent(`[xa-type=\"step\"]`);\n      stepElement.setTextContent(`${step}`);\n\n      const substepElement = new WFComponent(`[xa-type=\"substep\"]`);\n      substepElement.setTextContent(`${substep}`);\n\n      // Update the kuvert_mottagen element with the date\n      const kuvertMottagenElement = new WFComponent(`[xa-type=\"kuvertmottagen\"]`);\n      kuvertMottagenElement.setTextContent(kuvertMottagen);\n\n  } catch (error) {\n    console.error(\"Error fetching order details or status:\", error);\n    // Handle error appropriately\n  }\n\n      \n\n\n  \n};\n\norderDetails();\n"],"names":[],"version":3,"file":"orderDetail.c19c28fe.js.map","sourceRoot":"../"}