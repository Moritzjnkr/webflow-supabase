{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC2Ha,EAAA,MAAA,CAAA,EAAA,eAAA,IAAA,GA3Hb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,WACA,EAAA,EAAA,c,E,E,c,C,GAgBA,IAAM,EAAkB,KACpB,IAAM,EAAM,IAAI,EAAA,WAAW,CAAC,qBAC5B,EAAI,EAAE,CAAC,QAAS,AAAC,IACb,EAAE,cAAc,GAChB,EAAI,cAAc,CAAC,kBACnB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,GACJ,GACA,EAAI,cAAc,CAAC,WACvB,EAEM,EAAgB,UAClB,IAAM,EAAmB,IAAI,EAAA,aAAY,CAAS,2BAA4B,CAC1E,YAAa,2BACb,cAAe,+BACnB,GAEA,EAAiB,WAAW,CAAC,CAAC,CAAE,QAAA,CAAO,CAAE,WAAA,CAAU,CAAE,IACjD,GAAI,CAAC,GAAW,CAAC,EAEb,OADA,QAAQ,KAAK,CAAC,iCAAkC,EAAS,GACl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","sources":["<anon>","src/modules/order/orderDetail.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"gxkHk\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"orderDetails\", ()=>orderDetails);\nvar _core = require(\"@xatom/core\");\nvar _auth = require(\"../auth\");\nvar _supbase = require(\"../supbase\");\nvar _supbaseDefault = parcelHelpers.interopDefault(_supbase);\nconst renderLogoutBtn = ()=>{\n    const btn = new (0, _core.WFComponent)(`[xa-type=cta-btn]`);\n    btn.on(\"click\", (e)=>{\n        e.preventDefault();\n        btn.setTextContent(\"Please wait...\");\n        (0, _auth.logout)();\n    });\n    btn.setTextContent(\"Logga ut\");\n};\nconst renderHistory = async ()=>{\n    const historyContainer = new (0, _core.WFDynamicList)(\"[xa-type='history-list']\", {\n        rowSelector: \"[xa-type='history-item']\",\n        emptySelector: \"[xa-type='no-previous-order']\"\n    });\n    historyContainer.rowRenderer(({ rowData, rowElement })=>{\n        if (!rowData || !rowElement) {\n            console.error(\"Row data or element is missing\", rowData, rowElement);\n            return rowElement; // Return the row element to maintain the structure\n        }\n        console.log(\"Rendering row with data\", rowData);\n        const vardNrComponent = rowElement.getChildAsComponent(\"[xa-type='history-vard-nr']\");\n        const beloppComponent = rowElement.getChildAsComponent(\"[xa-type='history-belopp']\");\n        if (vardNrComponent && beloppComponent) {\n            vardNrComponent.setTextContent(rowData.valuation_number);\n            const amountText = rowData.amount != null ? rowData.amount.toFixed(2) + \" SEK\" : \"0.00 SEK\";\n            beloppComponent.setTextContent(amountText);\n        } else console.error(\"One or more components not found in row element\", vardNrComponent, beloppComponent);\n        return rowElement;\n    });\n    try {\n        const { data: historyData, error } = await (0, _supbaseDefault.default).from(\"Order\").select(\"*\").eq(\"user_id\", (0, _auth.userAuth).getUser().id).eq(\"is_complete\", true).order(\"order_date\", {\n            ascending: false\n        });\n        if (error) {\n            console.error(\"Error fetching order history:\", error);\n            return;\n        }\n        console.log(\"Setting data for history\", historyData);\n        historyContainer.setData(historyData || []);\n    } catch (error) {\n        console.error(\"Failed to fetch or render order history:\", error);\n    }\n};\nconst fetchLatestIncompleteOrder = async (userId)=>{\n    try {\n        const { data: order, error } = await (0, _supbaseDefault.default).from(\"Order\").select(\"*\").eq(\"user_id\", userId).eq(\"is_complete\", false).order(\"order_date\", {\n            ascending: false\n        }).limit(1).single();\n        if (error || !order) {\n            console.error(\"Error fetching latest incomplete order or no such order exists\", error);\n            return null;\n        }\n        console.log(\"Fetched latest incomplete order\", order);\n        return order;\n    } catch (error) {\n        console.error(\"Error fetching latest incomplete order:\", error);\n        return null;\n    }\n};\nconst fetchOrderStatus = async (orderId)=>{\n    try {\n        const { data: statusData, error: statusError } = await (0, _supbaseDefault.default).from(\"order_status\").select(\"*\").eq(\"order_id\", orderId).order(\"created_at\", {\n            ascending: false\n        }).limit(1).single();\n        if (statusError) {\n            console.error(\"Error fetching order status:\", statusError);\n            return null;\n        }\n        console.log(\"Fetched latest order status\", statusData);\n        return statusData;\n    } catch (error) {\n        console.error(\"Error fetching order status:\", error);\n        return null;\n    }\n};\nconst orderDetails = async ()=>{\n    renderLogoutBtn();\n    renderHistory(); // Call to render history of completed orders\n    const userId = (0, _auth.userAuth).getUser().id;\n    const orderDetailsContainer = new (0, _core.WFComponent)(`[xa-type=\"order-details\"]`);\n    const order = await fetchLatestIncompleteOrder(userId);\n    if (!order) {\n        orderDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n        return;\n    }\n    const components = orderDetailsContainer.getManyChildAsComponents({\n        kvittolink: \"[xa-type=pdf-link]\",\n        bestallning: \"[xa-type=bestallning]\",\n        datum: \"[xa-type=datum]\",\n        varderingsnummer: \"[xa-type=varderingsnummer]\",\n        summa: \"[xa-type=summa]\",\n        angeratt: \"[xa-type=angerr\\xe4tt]\",\n        totalgrampurchased: \"[xa-type=totalgrampurchased]\"\n    });\n    if (components.bestallning && components.datum && components.varderingsnummer && components.summa && components.angeratt && components.totalgrampurchased && components.kvittolink) {\n        components.bestallning.setTextContent(order.barcodeid.toFixed(0));\n        components.datum.setTextContent(order.order_date);\n        components.varderingsnummer.setTextContent(order.valuation_number);\n        components.summa.setTextContent(order.amount || \"0.00\");\n        components.angeratt.setTextContent(order.cancellation_right_period);\n        components.totalgrampurchased.setTextContent(order.total_gram_purchased || \"0.00\");\n        components.kvittolink.setAttribute(\"href\", order.recipe_download_link);\n    } else {\n        console.error(\"One or more components not found in order details container\", components);\n        return;\n    }\n    const statusData = await fetchOrderStatus(order.id);\n    if (!statusData) return;\n    const formatDateTime = (isoString)=>{\n        const date = new Date(isoString);\n        const day = date.getDate().toString().padStart(2, \"0\");\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const year = date.getFullYear();\n        const hours = date.getHours().toString().padStart(2, \"0\");\n        const minutes = date.getMinutes().toString().padStart(2, \"0\");\n        return `${day}.${month}.${year} ${hours}:${minutes}`;\n    };\n    const step = statusData.step || 1;\n    const substep = statusData.substep || 1;\n    const kuvertMottagen = statusData.kuvert_mottagen ? formatDateTime(statusData.kuvert_mottagen) : \"Not available\";\n    const stepElement = new (0, _core.WFComponent)(`[xa-type=\"step\"]`);\n    const substepElement = new (0, _core.WFComponent)(`[xa-type=\"substep\"]`);\n    const kuvertMottagenElement = new (0, _core.WFComponent)(`[xa-type=\"kuvertmottagen\"]`);\n    if (stepElement && substepElement && kuvertMottagenElement) {\n        stepElement.setTextContent(`${step}`);\n        substepElement.setTextContent(`${substep}`);\n        kuvertMottagenElement.setTextContent(kuvertMottagen);\n    } else console.error(\"One or more step-related components not found\", {\n        stepElement,\n        substepElement,\n        kuvertMottagenElement\n    });\n};\norderDetails();\n\n},{\"@xatom/core\":\"5eqAK\",\"../auth\":\"apxUl\",\"../supbase\":\"54PYi\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequire89a0\")\n\n//# sourceMappingURL=orderDetail.c0fa379c.js.map\n","import { WFComponent, WFDynamicList } from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\ninterface Order {\n    id: string;\n    user_id: string;\n    order_id: string;\n    is_complete: boolean;\n    order_date: string;\n    valuation_number: string;\n    amount: number | null;\n    cancellation_right_period: string;\n    total_gram_purchased: number;\n    recipe_download_link: string;\n    barcodeid: number;\n}\n\nconst renderLogoutBtn = () => {\n    const btn = new WFComponent(`[xa-type=cta-btn]`);\n    btn.on(\"click\", (e) => {\n        e.preventDefault();\n        btn.setTextContent(\"Please wait...\");\n        logout();\n    });\n    btn.setTextContent(\"Logga ut\");\n};\n\nconst renderHistory = async () => {\n    const historyContainer = new WFDynamicList<Order>(\"[xa-type='history-list']\", {\n        rowSelector: \"[xa-type='history-item']\",\n        emptySelector: \"[xa-type='no-previous-order']\"\n    });\n\n    historyContainer.rowRenderer(({ rowData, rowElement }) => {\n        if (!rowData || !rowElement) {\n            console.error(\"Row data or element is missing\", rowData, rowElement);\n            return rowElement; // Return the row element to maintain the structure\n        }\n\n        console.log(\"Rendering row with data\", rowData);\n\n        const vardNrComponent = rowElement.getChildAsComponent(\"[xa-type='history-vard-nr']\");\n        const beloppComponent = rowElement.getChildAsComponent(\"[xa-type='history-belopp']\");\n\n        if (vardNrComponent && beloppComponent) {\n            vardNrComponent.setTextContent(rowData.valuation_number);\n            const amountText = rowData.amount != null ? rowData.amount.toFixed(2) + ' SEK' : \"0.00 SEK\";\n            beloppComponent.setTextContent(amountText);\n        } else {\n            console.error(\"One or more components not found in row element\", vardNrComponent, beloppComponent);\n        }\n\n        return rowElement;\n    });\n\n    try {\n        const { data: historyData, error } = await supabase\n            .from(\"Order\")\n            .select(\"*\")\n            .eq(\"user_id\", userAuth.getUser().id)\n            .eq(\"is_complete\", true)\n            .order(\"order_date\", { ascending: false });\n\n        if (error) {\n            console.error(\"Error fetching order history:\", error);\n            return;\n        }\n\n        console.log(\"Setting data for history\", historyData);\n        historyContainer.setData(historyData || []);\n    } catch (error) {\n        console.error(\"Failed to fetch or render order history:\", error);\n    }\n};\n\nconst fetchLatestIncompleteOrder = async (userId: string) => {\n    try {\n        const { data: order, error } = await supabase\n            .from(\"Order\")\n            .select(\"*\")\n            .eq(\"user_id\", userId)\n            .eq(\"is_complete\", false)\n            .order(\"order_date\", { ascending: false })\n            .limit(1)\n            .single();\n\n        if (error || !order) {\n            console.error(\"Error fetching latest incomplete order or no such order exists\", error);\n            return null;\n        }\n\n        console.log(\"Fetched latest incomplete order\", order);\n        return order;\n    } catch (error) {\n        console.error(\"Error fetching latest incomplete order:\", error);\n        return null;\n    }\n};\n\nconst fetchOrderStatus = async (orderId: string) => {\n    try {\n        const { data: statusData, error: statusError } = await supabase\n            .from(\"order_status\")\n            .select(\"*\")\n            .eq(\"order_id\", orderId)\n            .order(\"created_at\", { ascending: false })\n            .limit(1)\n            .single();\n\n        if (statusError) {\n            console.error(\"Error fetching order status:\", statusError);\n            return null;\n        }\n\n        console.log(\"Fetched latest order status\", statusData);\n        return statusData;\n    } catch (error) {\n        console.error(\"Error fetching order status:\", error);\n        return null;\n    }\n};\n\nexport const orderDetails = async () => {\n    renderLogoutBtn();\n    renderHistory();  // Call to render history of completed orders\n\n    const userId = userAuth.getUser().id;\n    const orderDetailsContainer = new WFComponent(`[xa-type=\"order-details\"]`);\n\n    const order = await fetchLatestIncompleteOrder(userId);\n    if (!order) {\n        orderDetailsContainer.setHTML(\"<p>No active order found.</p>\");\n        return;\n    }\n\n    const components = orderDetailsContainer.getManyChildAsComponents({\n        kvittolink: \"[xa-type=pdf-link]\",\n        bestallning: \"[xa-type=bestallning]\",\n        datum: \"[xa-type=datum]\",\n        varderingsnummer: \"[xa-type=varderingsnummer]\",\n        summa: \"[xa-type=summa]\",\n        angeratt: \"[xa-type=angerrätt]\",\n        totalgrampurchased: \"[xa-type=totalgrampurchased]\",\n    });\n\n    if (components.bestallning && components.datum && components.varderingsnummer && components.summa && components.angeratt && components.totalgrampurchased && components.kvittolink) {\n        components.bestallning.setTextContent(order.barcodeid.toFixed(0));\n        components.datum.setTextContent(order.order_date);\n        components.varderingsnummer.setTextContent(order.valuation_number);\n        components.summa.setTextContent(order.amount || \"0.00\");\n        components.angeratt.setTextContent(order.cancellation_right_period);\n        components.totalgrampurchased.setTextContent(order.total_gram_purchased || \"0.00\");\n        components.kvittolink.setAttribute(\"href\", order.recipe_download_link);\n    } else {\n        console.error(\"One or more components not found in order details container\", components);\n        return;\n    }\n\n    const statusData = await fetchOrderStatus(order.id);\n    if (!statusData) return;\n\n    const formatDateTime = (isoString) => {\n        const date = new Date(isoString);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        const hours = date.getHours().toString().padStart(2, '0');\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n\n        return `${day}.${month}.${year} ${hours}:${minutes}`;\n    };\n\n    const step = statusData.step || 1;\n    const substep = statusData.substep || 1;\n    const kuvertMottagen = statusData.kuvert_mottagen ? formatDateTime(statusData.kuvert_mottagen) : \"Not available\";\n\n    const stepElement = new WFComponent(`[xa-type=\"step\"]`);\n    const substepElement = new WFComponent(`[xa-type=\"substep\"]`);\n    const kuvertMottagenElement = new WFComponent(`[xa-type=\"kuvertmottagen\"]`);\n\n    if (stepElement && substepElement && kuvertMottagenElement) {\n        stepElement.setTextContent(`${step}`);\n        substepElement.setTextContent(`${substep}`);\n        kuvertMottagenElement.setTextContent(kuvertMottagen);\n    } else {\n        console.error(\"One or more step-related components not found\", { stepElement, substepElement, kuvertMottagenElement });\n    }\n};\n\norderDetails();\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","orderDetails","_core","_auth","_supbase","_supbaseDefault","interopDefault","renderLogoutBtn","btn","WFComponent","on","e","preventDefault","setTextContent","logout","renderHistory","historyContainer","WFDynamicList","rowSelector","emptySelector","rowRenderer","rowData","rowElement","console","error","log","vardNrComponent","getChildAsComponent","beloppComponent","valuation_number","amountText","amount","toFixed","data","historyData","default","from","select","eq","userAuth","getUser","order","ascending","setData","fetchLatestIncompleteOrder","userId","limit","single","fetchOrderStatus","orderId","statusData","statusError","orderDetailsContainer","setHTML","components","getManyChildAsComponents","kvittolink","bestallning","datum","varderingsnummer","summa","angeratt","totalgrampurchased","barcodeid","order_date","cancellation_right_period","total_gram_purchased","setAttribute","recipe_download_link","step","substep","kuvertMottagen","kuvert_mottagen","formatDateTime","isoString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","stepElement","substepElement","kuvertMottagenElement"],"version":3,"file":"orderDetail.c0fa379c.js.map"}